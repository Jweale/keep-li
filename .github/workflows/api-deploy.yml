name: Deploy Cloudflare Worker

on:
  push:
    branches:
      - dev
      - main
    paths:
      - 'api/**'
      - 'shared/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'pnpm-workspace.yaml'
      - '.github/workflows/api-deploy.yml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint API workspace
        run: pnpm --filter @keep-li/api run lint

      - name: Type-check API workspace
        run: pnpm --filter @keep-li/api run typecheck

      - name: Run API tests
        run: pnpm --filter @keep-li/api run test

      - name: Sync staging secrets
        if: github.ref == 'refs/heads/dev'
        run: pnpm --filter @keep-li/api run secrets:sync:staging
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

      - name: Sync production secrets
        if: github.ref == 'refs/heads/main'
        run: pnpm --filter @keep-li/api run secrets:sync:production
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

      - name: Deploy to staging
        if: github.ref == 'refs/heads/dev'
        run: pnpm --filter @keep-li/api run deploy:staging

      - name: Deploy to production
        if: github.ref == 'refs/heads/main'
        run: pnpm --filter @keep-li/api run deploy:production
